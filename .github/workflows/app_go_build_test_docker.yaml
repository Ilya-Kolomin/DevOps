name: Build, test, and push to Docker app_go

on:
  push:
    paths:
      - '.github/workflows/app_go_build_test_docker.yaml'
      - 'app_go/**'
      - '!app_go/**.md'

defaults:
  run:
    working-directory: ./app_go

jobs:
  build_lint_test:
    runs-on: ubuntu-latest
    steps:
        # checkout and set up golang
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17
          cache: true
          cache-dependency-path: app_go/go.sum

        # linting
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          working-directory: app_go

        # testing
      - name: Test with Go
        run: |
          cd app_go
          go test -json *.go > TestResults-Go.1.17.json
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: TestResults-Go.1.17
          path: TestResults-Go.1.17.json


  security:
    runs-on: ubuntu-latest
    needs: build_lint_test
    steps:
        # checkout
      - uses: actions/checkout@v3

        # setup and use snyk
      - uses: snyk/actions/setup@master
      - name: Snyk test for vulnerabilities
        run: | 
          cd app_go
          snyk test --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

        # upload results
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: app_go/snyk.sarif

  # build and push docker image
  build_docker:
    needs: build_lint_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app_gp
          file: app_go/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/devops_app_go:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/devops_app_go:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/devops_app_go:buildcache,mode=max